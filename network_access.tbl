// *****************************************************************************
// network_access.tbl                                              Tao3D project
// *****************************************************************************
//
// File description:
//
//     Definition of the interface between XLR and native code for
//     the "NetworkAccess" module.
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3
// (C) 2012, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// (C) 2012,2014,2019, Christophe de Dinechin <christophe@dinechin.org>
// (C) 2012, Jérôme Forissier <jerome@taodyne.com>
// (C) 2012, Baptiste Soulisse <baptiste.soulisse@taodyne.com>
// *****************************************************************************
// This file is part of Tao3D
//
// Tao3D is free software: you can r redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Tao3D is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Tao3D, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

PREFIX(GetUrlText,  text, "get_url_text",
       PARM(UrlValue, text, ),
       return getUrlText(self, &UrlValue),
       GROUP(module.Netaccesss)
       SYNOPSIS("Get text from the given URL."))

PREFIX(GetUrlData,  tree, "get_url_data",
       PARM(url, text, )
       PARM(p, text, "Prefix to apply")
       PARM(fs, text, "Field separator")
       PARM(rs, text, "Row separator"),
       return getUrlData(context, self, &url, p, fs, rs),
       GROUP(module.Netaccesss)
       SYNOPSIS("Get text from the given URL."))

PREFIX(GetUrlCSV,  tree, "get_url_csv",
       PARM(url, text, )
       PARM(p, text, "Prefix to apply"),
       return getUrlData(context, self, &url, p, ",;", "\n\f\r"),
       GROUP(module.Netaccesss)
       SYNOPSIS("Get text from the given URL."))

